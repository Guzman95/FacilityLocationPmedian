//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BasedOnHarmony.Servidor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DistributeTask", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class DistributeTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlgorithmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProblemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Result_BestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Algorithm {
            get {
                return this.AlgorithmField;
            }
            set {
                if ((object.ReferenceEquals(this.AlgorithmField, value) != true)) {
                    this.AlgorithmField = value;
                    this.RaisePropertyChanged("Algorithm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Problem {
            get {
                return this.ProblemField;
            }
            set {
                if ((object.ReferenceEquals(this.ProblemField, value) != true)) {
                    this.ProblemField = value;
                    this.RaisePropertyChanged("Problem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Result_Best {
            get {
                return this.Result_BestField;
            }
            set {
                if ((this.Result_BestField.Equals(value) != true)) {
                    this.Result_BestField = value;
                    this.RaisePropertyChanged("Result_Best");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seed {
            get {
                return this.SeedField;
            }
            set {
                if ((this.SeedField.Equals(value) != true)) {
                    this.SeedField = value;
                    this.RaisePropertyChanged("Seed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Servidor.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTask", ReplyAction="http://tempuri.org/IService/GetTaskResponse")]
        BasedOnHarmony.Servidor.DistributeTask GetTask();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTask", ReplyAction="http://tempuri.org/IService/GetTaskResponse")]
        System.Threading.Tasks.Task<BasedOnHarmony.Servidor.DistributeTask> GetTaskAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveResults", ReplyAction="http://tempuri.org/IService/SaveResultsResponse")]
        bool SaveResults(BasedOnHarmony.Servidor.DistributeTask miDistributeTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveResults", ReplyAction="http://tempuri.org/IService/SaveResultsResponse")]
        System.Threading.Tasks.Task<bool> SaveResultsAsync(BasedOnHarmony.Servidor.DistributeTask miDistributeTask);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : BasedOnHarmony.Servidor.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<BasedOnHarmony.Servidor.IService>, BasedOnHarmony.Servidor.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BasedOnHarmony.Servidor.DistributeTask GetTask() {
            return base.Channel.GetTask();
        }
        
        public System.Threading.Tasks.Task<BasedOnHarmony.Servidor.DistributeTask> GetTaskAsync() {
            return base.Channel.GetTaskAsync();
        }
        
        public bool SaveResults(BasedOnHarmony.Servidor.DistributeTask miDistributeTask) {
            return base.Channel.SaveResults(miDistributeTask);
        }
        
        public System.Threading.Tasks.Task<bool> SaveResultsAsync(BasedOnHarmony.Servidor.DistributeTask miDistributeTask) {
            return base.Channel.SaveResultsAsync(miDistributeTask);
        }
    }
}
